<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Roshow</title>
    <link rel="icon" href="/assets/images/logo icon.png">
    <link rel="stylesheet" href="/assets/css/otpstyle.css" />
    <link href="https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css" rel="stylesheet" />
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <!-- SweetAlert2 CDN -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script src="script.js" defer></script>
    <style>
      body {
        font-family: 'Arial', sans-serif;
        background-color: #f0f2f5;
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
        margin: 0;
      }

      .container {
        background-color: #ffffff;
        border-radius: 15px;
        box-shadow: 0 4px 8px rgba(0,0,0,0.2);
        padding: 2rem;
        width: 100%;
        max-width: 400px;
        text-align: center;
      }

      header {
        margin-bottom: 1rem;
      }

      header i {
        font-size: 2rem;
        color: #4caf50;
      }

      h4 {
        font-size: 1.5rem;
        color: #333;
        margin-bottom: 1rem;
      }

      .input-field {
        display: flex;
        justify-content: space-between;
        margin-bottom: 1rem;
      }

      .otp-digit {
        width: 40px;
        height: 40px;
        border: 1px solid #ddd;
        border-radius: 5px;
        font-size: 1.5rem;
        text-align: center;
        background-color: #f9f9f9;
        transition: border-color 0.3s;
      }

      .otp-digit:focus {
        border-color: #4caf50;
        outline: none;
      }

      #otp-message {
        color: #666;
        margin-bottom: 1rem;
      }

      button {
        background-color: #4caf50;
        color: #ffffff;
        border: none;
        border-radius: 25px;
        padding: 10px 20px;
        font-size: 1rem;
        cursor: pointer;
        transition: background-color 0.3s;
        width: 100%;
        margin-bottom: 1rem;
      }

      button:hover {
        background-color: #388e3c;
      }

      #resend-otp-btn {
        background-color: #ffc107;
        color: #000;
      }

      #resend-otp-btn:hover {
        background-color: #e0a800;
      }

      #timer-container {
        margin-top: 1rem;
      }

      #timer-text {
        font-size: 0.9rem;
        color: #666;
      }

      #timer {
        font-weight: bold;
        color: #4caf50;
      }
    </style>
  </head>

  <body>
    <div class="container">
      <header>
        <i class="bx bxs-check-shield"></i>
      </header>
      <h4>Enter OTP Code</h4>

      <form action="/verify-otp" method="post" id="otp-form">
        <input type="hidden" name="email" value="<%= email %>" />

        <div class="input-field" id="otp-inputs">
          <input type="text" maxlength="1" class="otp-digit" required />
          <input type="text" maxlength="1" class="otp-digit" required />
          <input type="text" maxlength="1" class="otp-digit" required />
          <input type="text" maxlength="1" class="otp-digit" required />
          <input type="text" maxlength="1" class="otp-digit" required />
          <input type="text" maxlength="1" class="otp-digit" required />
        </div>

        <input type="hidden" name="otp" id="otp" />

        <p id="otp-message">Check your email</p>
        <button type="submit">Verify OTP</button>

        <!-- Resend OTP Button (Initially Hidden) -->
        <button
          type="button"
          id="resend-otp-btn"
          style="display: none;"
          onclick="resendOTP()"
        >
          Resend OTP
        </button>

        <!-- Countdown Timer -->
        <div id="timer-container">
          <p id="timer-text">
            Resend OTP in <span id="timer">30</span> seconds
          </p>
        </div>
      </form>
    </div>
  </body>
</html>
<script>
  document
    .getElementById("otp-form")
    .addEventListener("submit", function (event) {
      event.preventDefault();
      const otpDigits = document.querySelectorAll(".otp-digit");
      let otp = "";
      otpDigits.forEach((input) => (otp += input.value));
      document.getElementById("otp").value = otp;

      // Use Fetch API to submit OTP
      fetch(this.action, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/x-www-form-urlencoded'
        },
        body: new URLSearchParams(new FormData(this))
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          // Redirect on success
          window.location.href = `/home?email=${data.email}`;
        } else {
          // Show SweetAlert error
          Swal.fire({
            icon: 'error',
            title: 'Invalid OTP',
            text: data.message
          });
        }
      })
      .catch(error => {
        console.error('Error:', error);
        Swal.fire({
          icon: 'error',
          title: 'Oops...',
          text: 'Something went wrong. Please try again.'
        });
      });
    });

  // Existing timer and resend OTP functions
  let timer;
  const startTimer = () => {
    let timeInSeconds = 60; // Set the time interval in seconds
    timer = setInterval(() => {
      timeInSeconds--;
      if (timeInSeconds <= 0) {
        clearInterval(timer);
        document.getElementById("resend-otp-btn").style.display = "block";
        document.getElementById("timer-container").style.display = "none"; // Hide timer text
      } else {
        document.getElementById("timer").textContent = timeInSeconds;
      }
    }, 1000); // Update timer every second (1000ms)
  };

  // Call the timer function when the page loads
  startTimer();

  // Function to resend OTP (called when Resend OTP button is clicked)
  function resendOTP() {
    clearInterval(timer); // Clear the previous timer
    document.getElementById("resend-otp-btn").style.display = "none"; // Hide the button again
    document.getElementById("timer-container").style.display = "block"; // Show timer text again
    document.getElementById("timer").textContent = "30"; // Reset timer text

    // Implement logic to resend OTP here (e.g., fetch new OTP from server and update UI)
    $.ajax({
      type: "GET",
      url: "/resend-otp", // Route to handle OTP resend
      data: { email: "<%= email %>" }, // Pass email to server for OTP resend
      success: function (response) {
        console.log(response); // Handle success (optional)
        document.getElementById("otp-message").textContent =
          "OTP resent. Check your inbox."; // Update message
        startTimer(); // Restart the timer after successful resend
      },
      error: function (xhr, status, error) {
        console.error(error); // Handle error (optional)
        Swal.fire({
          icon: 'error',
          title: 'Failed to resend OTP',
          text: 'Please try again.'
        });
      },
    });
  }
</script>

 </body>
</html>